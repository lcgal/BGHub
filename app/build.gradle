buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap"}
    }
    dependencies {
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        classpath 'io.fabric.tools:gradle:1.31.2'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${version_dokka}"
    }
}


plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.dokka'
}

android {
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileSdkVersion 31
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.example.bghub"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "en"
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dokka {
        outputFormat = 'html'
        //outputDirectory = "$buildDir/dokka"

        configuration {
            // Do not output deprecated members
            skipDeprecated = true

            // Emit warnings about not documented members.
            reportUndocumented = true

            // Do not create index pages for empty packages
            skipEmptyPackages = true
        }
    }
}

dependencies {
    implementation 'com.google.firebase:firebase-auth:21.0.3'
    implementation 'com.google.firebase:firebase-firestore:24.1.0'

    // Core library
    androidTestImplementation 'androidx.test:core:1.4.0'

    //WorkManager
    def work_version = "2.7.1"
    //noinspection GradleDependency
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - RxJava2 support
    //noinspection GradleDependency
    implementation "androidx.work:work-rxjava2:$work_version"
    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    //Testing
    androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // For instrumented tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.41")
    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.41")
    // For Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:2.41")
    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:2.41")



    implementation 'com.firebaseui:firebase-ui-auth:6.4.0'
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.gms:play-services-location:19.0.1'


    //CardSwipe behaviour
    implementation "com.yuyakaido.android:card-stack-view:2.3.4"

    // Hilt - Dependency injection
    def hilt_version = "2.41"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    def dagger_assist_version = "0.3.3"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$dagger_assist_version"
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    // Retrofit
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"
    implementation "com.squareup.okhttp3:okhttp:4.9.3"

    // Picasso
    implementation("com.squareup.retrofit2:converter-simplexml:2.9.0") {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
        exclude group: 'xpp3', module: 'xpp3'
    }
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'




    // DbFlow dependencies
    def dbflow_version = "4.2.4"
    dependencies {
        // annotationProcessor now supported in Android Gradle plugin 2.2
        // See https://bitbucket.org/hvisser/android-apt/wiki/Migration
        annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
        implementation "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
        implementation "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"
        // sql-cipher database encryption (optional)
        // implementation "com.github.Raizlabs.DBFlow:dbflow-sqlcipher:${dbflow_version}"
    }
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

// workaround: create DocsByDokka
task DocsByDokka (type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "html"
    outputDirectory = "$buildDir/dokka"
}
